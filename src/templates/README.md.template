# Observer

An effort by [eLife Sciences](http://elifesciences.org) to provide an 
unsophisticated reporting application for article data.

This project uses the [Python programming language](https://www.python.org/),
the [Django web framework](https://www.djangoproject.com/) and a
[relational database](https://en.wikipedia.org/wiki/Relational_database_management_system).

[Github repository](https://github.com/elifesciences/observer/).

## reports

A report URL looks like:

* /report/reportname

For example, if you wanted the latest articles published, the url would look like:

* [/report/latest-articles]({% url 'report' 'latest-articles'%})

Reports are paginated and ordered and you can page through their results. For example:

* [/report/latest-articles?page=20]({% url 'report' 'latest-articles'%}?page=20)

returns the twentieth page of the latest articles. And:

* [/report/latest-articles?page=20&per-page=100]({% url 'report' 'latest-articles'%}?page=20&per-page=100)

returns you results 2000 through 2100.

Reports have a default format and often have more than one format. For example:

* [/report/latest-articles]({% url 'report' 'latest-articles'%})

is formatted as RSS. The `latest-articles` report also supports plain CSV:

* [{% url 'report' 'latest-articles'%}?format=csv]({% url 'report' 'latest-articles'%}?format=csv)

or, as a simple format hint:

* [{% url 'report' 'latest-articles' 'csv' %}]({% url 'report' 'latest-articles' 'csv' %})

## available reports
{% for slug, meta in reports.items %}
#### {{ meta.title }} report

{{ meta.description }}

* {% for s in meta.serialisations %}[{{ s }}]({% url 'report' slug s|lower %}){% if not forloop.last %},{% endif %} {% endfor %} formats
* ordered by {{ meta.order_by_label }} ({{ meta.order_label }})
{% if meta.per_page != 0 %}* {{ meta.per_page }} articles per page (default) [50pp]({% url 'report' slug %}?per-page=50) [100pp]({% url 'report' slug %}?per-page=100){% endif %}
{% if meta.params %}* accepts these extra parameters: {{ meta.params }}{% endif %}{% endfor %}

## installation

[code](https://github.com/elifesciences/observer/blob/master/install.sh)  

    git clone https://github.com/elifesciences/observer
    cd observer
    ./install.sh

PostgreSQL is used in production so there is a dependency on psycopg2 which 
requires your distribution's 'libpq' library to be installed. On Arch Linux, 
this is 'libpqxx', on Ubuntu this is 'libpq-dev'.

## updating

[code](https://github.com/elifesciences/observer/blob/master/install.sh)  

    git pull
    ./install.sh

## testing 

[code](https://github.com/elifesciences/observer/blob/master/src/observer/tests/)  

    ./test.sh

## running

[code](https://github.com/elifesciences/observer/blob/master/manage.sh)

    ./manage.sh runserver
    firefox http://127.0.0.1:8000/

## Copyright & Licence

Copyright 2018 eLife Sciences. Licensed under the [GPLv3](LICENCE.txt)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

